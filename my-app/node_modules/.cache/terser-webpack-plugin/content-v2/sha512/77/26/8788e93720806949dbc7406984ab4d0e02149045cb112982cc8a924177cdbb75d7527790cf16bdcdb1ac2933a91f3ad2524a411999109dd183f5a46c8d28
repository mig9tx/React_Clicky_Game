{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\miket\\\\Documents\\\\github\\\\React_Clicky_Game\\\\my-app\\\\src\\\\components\\\\Title\\\\index.js\",\"C:\\\\Users\\\\miket\\\\Documents\\\\github\\\\React_Clicky_Game\\\\my-app\\\\src\\\\components\\\\Image\\\\index.js\",\"C:\\\\Users\\\\miket\\\\Documents\\\\github\\\\React_Clicky_Game\\\\my-app\\\\src\\\\components\\\\Wrapper\\\\wrapper.js\",\"C:\\\\Users\\\\miket\\\\Documents\\\\github\\\\React_Clicky_Game\\\\my-app\\\\src\\\\App.js\",\"C:\\\\Users\\\\miket\\\\Documents\\\\github\\\\React_Clicky_Game\\\\my-app\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\miket\\\\Documents\\\\github\\\\React_Clicky_Game\\\\my-app\\\\src\\\\index.js\"],\"names\":[\"Title\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"children\",\"ImageElement\",\"class\",\"alt\",\"key\",\"src\",\"width\",\"Wrapper\",\"App\",\"state\",\"images\",\"wrapper\",\"components_Title\",\"this\",\"map\",\"Image\",\"image\",\"id\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"yNAOeA,IAAAA,EAJf,SAAeC,GACX,OAAOC,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,SAASJ,EAAMK,WCMzBC,IAAAA,EARf,SAAsBN,GAClB,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKI,MAAM,iBACTN,EAAAC,EAAAC,cAAA,MAAA,CAAKK,IAAKR,EAAMS,IAAKC,IAAKV,EAAMU,IAAKC,MAAM,YCEtCC,IAAAA,EAJf,SAAiBZ,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,WAAWJ,EAAMK,kBC0B5BQ,oNArBbC,MAAQ,CACNC,OAAAA,2EAIA,OAEEd,EAAAC,EAAAC,cAACa,EAAD,KACAf,EAAAC,EAAAC,cAACc,EAAD,KAAA,wBAECC,KAAKJ,MAAMC,OAAOI,IAAI,SAAAJ,GAAM,OAC3Bd,EAAAC,EAAAC,cAACiB,EAAD,CAAcV,IAAKK,EAAOM,MAAOZ,IAAKM,EAAOO,eAbnCC,EAAAA,YCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from \\\"react\\\";\\r\\n// import \\\"./style.css\\\";\\r\\n\\r\\nfunction Title(props) {\\r\\n    return <h1 className=\\\"title\\\">{props.children}</h1>;\\r\\n}\\r\\n\\r\\nexport default Title;\",\"import React from \\\"react\\\";\\r\\n\\r\\nfunction ImageElement(props) {\\r\\n    return (\\r\\n        <div class=\\\"img-container\\\">\\r\\n          <img alt={props.key} src={props.src} width=\\\"150px\\\"/>\\r\\n        </div>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default ImageElement;\",\"import React from \\\"react\\\";\\r\\n// import \\\"./style.css\\\";\\r\\n\\r\\nfunction Wrapper(props) {\\r\\n    return <div className=\\\"wrapper\\\">{props.children}</div>;\\r\\n}\\r\\n\\r\\nexport default Wrapper;\",\"import React, { Component } from 'react';\\nimport Title from \\\"./components/Title\\\";\\nimport ImageElement from \\\"./components/Image\\\";\\nimport Wrapper from \\\"./components/Wrapper/wrapper\\\";\\nimport images from \\\"./images.json\\\";\\nimport './App.css';\\n\\nclass App extends Component {\\n  // Setting this.state.images to the images json array\\n  state = {\\n    images\\n  };\\n\\n  render() {\\n    return (\\n      \\n      <Wrapper>\\n      <Title>Reactive Clicky Game</Title>\\n\\n      {this.state.images.map(images => (\\n        <ImageElement src={images.image} key={images.id}\\n        />))}\\n\\n      {/* <img src=\\\"./images/one.png\\\" alt=\\\"hello\\\"></img> */}\\n      </Wrapper>\\n       \\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,a,n){},17:function(e,a,n){},19:function(e,a,n){\"use strict\";n.r(a);var t=n(0),i=n.n(t),o=n(2),m=n.n(o),r=(n(15),n(3)),c=n(4),p=n(7),g=n(5),l=n(8);var s=function(e){return i.a.createElement(\"h1\",{className:\"title\"},e.children)};var u=function(e){return i.a.createElement(\"div\",{class:\"img-container\"},i.a.createElement(\"img\",{alt:e.key,src:e.src,width:\"150px\"}))};var d=function(e){return i.a.createElement(\"div\",{className:\"wrapper\"},e.children)},h=n(6),f=(n(17),function(e){function a(){var e,n;Object(r.a)(this,a);for(var t=arguments.length,i=new Array(t),o=0;o<t;o++)i[o]=arguments[o];return(n=Object(p.a)(this,(e=Object(g.a)(a)).call.apply(e,[this].concat(i)))).state={images:h},n}return Object(l.a)(a,e),Object(c.a)(a,[{key:\"render\",value:function(){return i.a.createElement(d,null,i.a.createElement(s,null,\"Reactive Clicky Game\"),this.state.images.map(function(e){return i.a.createElement(u,{src:e.image,key:e.id})}))}}]),a}(t.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));m.a.render(i.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},6:function(e){e.exports=[{id:1,name:\"one\",image:\"http://pngimg.com/uploads/mario/mario_PNG129.png\"},{id:2,name:\"two\",image:\"http://pngimg.com/uploads/mario/mario_PNG67.png\"},{id:3,name:\"three\",image:\"http://pngimg.com/uploads/mario/mario_PNG63.png\"},{id:4,name:\"four\",image:\"http://pngimg.com/uploads/mario/mario_PNG60.png\"},{id:5,name:\"five\",image:\"http://pngimg.com/uploads/mario/mario_PNG51.png\"},{id:6,name:\"six\",image:\"http://pngimg.com/uploads/mario/mario_PNG53.png\"},{id:7,name:\"seven\",image:\"http://pngimg.com/uploads/mario/mario_PNG48.png\"},{id:8,name:\"eight\",image:\"http://pngimg.com/uploads/mario/mario_PNG81.png\"},{id:9,name:\"nine\",image:\"http://pngimg.com/uploads/mario/mario_PNG79.png\"},{id:10,name:\"ten\",image:\"http://pngimg.com/uploads/mario/mario_PNG80.png\"}]},9:function(e,a,n){e.exports=n(19)}},[[9,2,1]]]);","extractedComments":[]}